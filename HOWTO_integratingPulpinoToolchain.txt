

================================================================================
                HOW-TO: Integrating Pulpino w/ RISC-V toolchain
================================================================================

Installing RISC-V Toolchain (pulp-riscv-gnu-toolchain):

source: https://github.com/pulp-platform/pulp-riscv-gnu-toolchain

1) Go to directory /opt, where all the software and add-on packages that are not part of the default installation.
    Create new directory where to store the toolchain
    $ mkdir riscv
    $ cd riscv/

2) As the repository uses submodules, we need to use the --recursive option to fetch the submodules automatically.
    $ git clone --recursive https://github.com/pulp-platform/pulp-riscv-gnu-toolchain

3) In Ubuntu, install several standard packages that are needed to build the toolchain.
    $ sudo apt-get install autoconf automake autotools-dev curl libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev

3) We now change to the  pulp-riscv-gnu-toolchain directory and execute the following commands:
    $  ./configure --prefix=/opt/riscv --enable-multilib
    $ make linux

Installing Pulpino + Integrating:

source: https://cairo-caplan.github.io/gsoc2017/2017/06/20/Pulpino-integration

4) Get out of /opt/riscv and execute the following command (inside /opt):
    $ git clone https://github.com/pulp-platform/pulpino.git
    $ cd pulpino

5) Download the required IP cores subrepositories through the script
    $ ./update-ips.py

  NOTE: If Ubuntu has been recently installed (20.04 LTS < ), then the predefined version of python is python 3.x.
  This script must be executed with python2 in order to work. Therefore, ./script won't work. This script
  has to be executed with "python2 update-ips.py"

  NOTE II: There are many 'print' instructions missing the  '()'. When exeuting, several errors will prompt
  regarding the missing parenthesis not only in this script, but in others. All prints must have the '()'
  in order to execute the script.

6) In the provided source, there is an optional step consisting of "making" all the documentation through
the command "make all". Since I hadn't had installed the many libraries regarding Latex, I couldn't create
the files. Because it is not an esencial step, I skipped it.

If you want to try "making" the files, I am adding the steps below:

    $ cd doc/datasheet/
    $ make all
    $ cd ../..  # Go back to Pulpino root

7) In the website, it is said that a directory (named 'build') has to be created. There is no need to.
Inside the sw directory, we execute the following command (nothing has to be changed in the script):

    $ ./cmake_configure.riscv.gcc.sh

  PROBLEM I: the script complained about the gcc compiler (can't be found or somehting similar).
  PROBLEM II: the script also complained about the platform (it couldn't be recognised).

  Although it didn't solve the problem, I found on the internet that it could be solved in two manners.
  Implementing one of the following options in the .sh script should be enough:
      1) #export CC=/usr/bin/gcc
         #export CXX=/usr/bin/g++

         NOTE: the location for this tools was found by using the command "whereis g++/gcc"

      2) cmake "$PULP_GIT_DIRECTORY"/sw/ \
            ...
                -DCMAKE_SYSTEM_NAME="Linux" \
                -DCMAKE_C_COMPILER="/usr/bin/gcc"

  Final solution: by installing the libraries g++-multilib and gcc-multilib I was able to solve the problem
  and run the scripts without errors.
      $  sudo apt-get install gcc-multilib g++-multilib


8) STUCK AT THIS POINT: since I have not been able to install ModelSim, when executing the command "make vcompile",
the script gives an error and does not execute.
      $ make vcompile
