$date
	Sat Sep  4 11:55:44 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module tb_mod_reg4_1to4 $end
$var wire 1 ! reg_full $end
$var wire 32 " o [31:0] $end
$var reg 32 # aux [31:0] $end
$var reg 1 $ clk $end
$var reg 8 % i [7:0] $end
$var reg 1 & rd_en $end
$var reg 1 ' resetn $end
$var reg 1 ( wr_en $end
$var integer 32 ) index [31:0] $end
$scope module DUT $end
$var wire 1 $ clk $end
$var wire 8 * i [7:0] $end
$var wire 1 & rd_en $end
$var wire 1 ' resetn $end
$var wire 1 ( wr_en $end
$var reg 32 + aux [31:0] $end
$var reg 2 , counter [1:0] $end
$var reg 32 - o [31:0] $end
$var reg 1 ! reg_full $end
$var integer 32 . index [31:0] $end
$upscope $end
$scope task enableResetn $end
$upscope $end
$scope task enableWrite $end
$upscope $end
$scope task test_read $end
$var reg 1 / rd_enable $end
$upscope $end
$scope task test_resetn $end
$upscope $end
$scope task test_setInput $end
$var reg 8 0 inn [7:0] $end
$var reg 1 1 wr_en1 $end
$var integer 32 2 indexx [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
x1
bx 0
x/
bx .
bx -
b0 ,
bx +
bx *
bx )
x(
x'
x&
bx %
0$
bx #
bx "
x!
$end
#1000
1$
#2000
0$
#3000
b0 "
b0 -
b0 +
b100 .
0!
1$
0'
#4000
0$
#5000
b1 ,
1(
bx00000000 #
b0 %
b0 *
1$
11
b1 2
b1 0
1'
#6000
0$
#7000
b10 ,
b100000000 +
b10 2
b10 0
bx0000000100000000 #
b1 %
b1 *
1$
#8000
0$
#9000
b11 ,
b100000000100000000 +
b11 2
b11 0
bx000000100000000100000000 #
b10 %
b10 *
1$
#10000
0$
#11000
b11000000100000000100000000 "
b11000000100000000100000000 -
b100 .
0!
b0 ,
b11000000100000000100000000 +
1&
1/
b11000000100000000100000000 #
b11 %
b11 *
1$
#12000
0$
#13000
b1 ,
b11000000100000000100000011 +
1$
b100 )
#14000
0$
#15000
b10 ,
b11000000100000001100000011 +
1$
#16000
0$
#17000
b11 ,
b11000000110000001100000011 +
1$
#18000
0$
#19000
b11000000110000001100000011 "
b11000000110000001100000011 -
b100 .
0!
b0 ,
1$
