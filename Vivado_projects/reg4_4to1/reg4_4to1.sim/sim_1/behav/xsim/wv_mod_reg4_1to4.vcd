$date
   Sat Sep 18 18:39:11 2021
$end
$version
  2020.2
$end
$timescale
  1ps
$end
$scope module tb_mod_reg4_1to4 $end
$var reg 1 ! clk $end
$var reg 1 " resetn $end
$var reg 1 # rd_en $end
$var reg 1 $ wr_en $end
$var reg 8 % i [7:0] $end
$var reg 32 & aux [3:0] $end
$var wire 32 ' o [3:0] $end
$var wire 1 ( reg_full $end
$var integer 32 ) index $end
$scope module DUT $end
$var integer 32 * index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 - rd_en $end
$var wire 1 . wr_en $end
$var wire 8 / i [7:0] $end
$var reg 32 0 aux [3:0] $end
$var reg 2 1 counter [1:0] $end
$var reg 1 2 reg_rdEn $end
$var reg 1 3 reg_full $end
$var reg 32 4 o [3:0] $end
$upscope $end
$scope task enableResetn $end
$upscope $end
$scope task test_setInput $end
$var reg 8 5 inn [7:0] $end
$var integer 32 6 indexx $end
$var reg 1 7 wr_en1 $end
$upscope $end
$scope task test_read $end
$var reg 1 8 rd_enable $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
x"
x#
x$
bx %
bx &
bx '
x(
bx )
bx *
0+
x,
x-
x.
bx /
bx 0
b0 1
x2
x3
bx 4
bx 5
bx 6
x7
x8
$end
#10000
1!
1+
#20000
0!
0+
#30000
1!
0"
0(
b100 *
1+
0,
b0 0
12
03
#40000
0!
0+
#50000
1!
1"
1$
b0 %
bx00000000 &
1+
1,
1.
b0 /
b1 1
x2
b1 5
b1 6
17
#60000
0!
0+
#70000
1!
b1 %
bx0000000100000000 &
1+
b1 /
b100000000 0
b10 1
b10 5
b10 6
#80000
0!
0+
#90000
1!
b10 %
bx000000100000000100000000 &
1+
b10 /
b100000000100000000 0
b11 1
b11 5
b11 6
07
#100000
0!
0+
#110000
1!
0$
b11 %
b11000000100000000100000000 &
1+
0.
b11 /
b100 5
17
#120000
0!
0+
#130000
1!
1#
1$
b100 %
b100000000100000000100000000 &
1(
1+
1-
1.
b100 /
b100000000100000000100000000 0
b0 1
12
13
18
#140000
0!
0+
#150000
1!
b100000000100000000100000000 '
0(
b100 )
b100 *
1+
03
b100000000100000000100000000 4
#160000
0!
0+
#170000
1!
1+
#180000
0!
0+
#190000
1!
1+
#200000
0!
0+
#210000
1!
1+
