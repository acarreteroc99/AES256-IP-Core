$date
   Tue Dec 28 16:37:37 2021
$end
$version
  2020.2
$end
$timescale
  1ps
$end
$scope module tb_AES256_enc $end
$var reg 1 ! clk $end
$var reg 1 " resetn $end
$var reg 1 # ctrl_dataIn_enc $end
$var reg 128 $ enc_dataIn [127:0] $end
$var reg 128 % enc_key [127:0] $end
$var reg 4 & enc_keyAddr [3:0] $end
$var wire 1 ' ctrl_dataOut_enc $end
$var wire 128 ( enc_dataOut [127:0] $end
$var integer 32 ) index $end
$var integer 32 * i $end
$scope module DUT $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 - ctrl_dataIn_enc $end
$var wire 128 . enc_key [127:0] $end
$var wire 128 / enc_dataIn [127:0] $end
$var reg 1 0 ctrl_dataOut_enc $end
$var reg 4 1 enc_keyAddr [3:0] $end
$var reg 128 2 enc_dataOut [127:0] $end
$var reg 128 3 auxData [15:0] $end
$var integer 32 4 i $end
$var integer 32 5 index $end
$var reg 4 6 aes_st [3:0] $end
$var reg 4 7 aes_st_next [3:0] $end
$var reg 4 8 round [3:0] $end
$var reg 1 9 end_st_reg $end
$var reg 1 : mux_chgInp $end
$var wire 8 ; dataOut_ROM [7:0] $end
$var reg 5 < rom_cnt [4:0] $end
$var reg 1 = req_rom $end
$var reg 1 > shf_reg $end
$var wire 128 ? dataOut_shifter [15:0] $end
$var reg 1 @ outp_en_shf $end
$var reg 1 A outp_en_shf_delay $end
$var wire 128 B dataOut_mixColumns [15:0] $end
$var reg 1 C wr_mC $end
$var reg 1 D wr_mC_delay $end
$var wire 128 E dataOut_reg16_2 [15:0] $end
$var reg 2 F reg162_cnt [1:0] $end
$var reg 1 G wr_reg162 $end
$var reg 1 H wr_reg162_delay $end
$var wire 128 I dataIn_addRK [15:0] $end
$var reg 128 J dataOut_addRK [15:0] $end
$var wire 8 K dataOut_reg163 [7:0] $end
$var reg 1 L wr_reg163 $end
$var wire 128 M key [127:0] $end
$scope module mux $end
$var wire 1 N addr $end
$var wire 128 O inp0 [15:0] $end
$var wire 128 E inp1 [15:0] $end
$var reg 128 P aux [15:0] $end
$var reg 128 Q outp [15:0] $end
$upscope $end
$scope module addRK $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 128 M inp_key_addRK [127:0] $end
$var wire 128 I inp_addRK [15:0] $end
$var reg 128 J outp_addRK [15:0] $end
$var integer 32 R index $end
$var integer 32 S row $end
$upscope $end
$scope module reg16_3 $end
$var integer 32 T index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 U wr_en $end
$var wire 1 V req_rom $end
$var wire 128 W inp_reg163 [15:0] $end
$var reg 128 X aux [15:0] $end
$var reg 4 Y n_read [3:0] $end
$var reg 4 Z n_read_delay [3:0] $end
$var reg 8 [ outp_reg163 [7:0] $end
$upscope $end
$scope module rom_Sbox $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 8 K addr_romSbox [7:0] $end
$var reg 8 \ outp_romSbox [7:0] $end
$upscope $end
$scope module shifter $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 ] wr_en $end
$var wire 8 ; inp_shf [7:0] $end
$var wire 1 ^ outp_en $end
$var reg 128 _ aux [15:0] $end
$var reg 4 ` counter [3:0] $end
$var wire 128 ? outp_shf [15:0] $end
$var integer 32 a index $end
$upscope $end
$scope module mixColumns $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 128 ? inp_mC [15:0] $end
$var wire 1 b wr_en $end
$var reg 32 c row [3:0] $end
$var reg 128 d temp [15:0] $end
$var reg 128 e auxIn [15:0] $end
$var reg 128 f outp_mC [15:0] $end
$var integer 32 g index $end
$var integer 32 h rowNum $end
$scope function mix_columns $end
$var reg 128 i mix_columns [15:0] $end
$var reg 128 j inp_mC [15:0] $end
$upscope $end
$scope function xtime $end
$var reg 8 k xtime [7:0] $end
$var reg 8 l num [7:0] $end
$upscope $end
$upscope $end
$scope module reg16_2 $end
$var integer 32 m index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 n wr_en $end
$var wire 4 o round [3:0] $end
$var wire 128 B inp_reg162_mC [15:0] $end
$var wire 128 ? inp_reg162_shf [15:0] $end
$var reg 128 p aux [15:0] $end
$var reg 128 q outp_reg162 [15:0] $end
$upscope $end
$upscope $end
$scope task enableResetn $end
$upscope $end
$scope task test_AES_encryption $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
x"
x#
bx $
bx %
bx &
x'
bx (
bx )
b0 *
0+
x,
x-
bz .
bx /
x0
bx 1
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
x9
x:
bx ;
bx <
x=
x>
bx ?
x@
xA
bx B
xC
xD
bx E
bx F
xG
xH
bx I
bx J
bx K
xL
bz M
xN
bx O
bx P
bx Q
bx R
bx S
bx T
xU
xV
bx W
bx X
bx Y
bx Z
bx [
bx \
x]
x^
bx _
bx `
bx a
xb
bx c
bx d
bx e
bx f
bx g
bx h
bx i
bx j
b0 k
bx l
bx m
xn
bx o
bx p
bx q
$end
#10000
1!
0'
1+
00
09
b0 <
0=
0@
0C
0G
0L
b10000 R
bx S
0U
0V
0]
0^
0b
0n
#11000
0"
bx0000000000000000 (
0,
b0 1
bx0000000000000000 2
b10000 4
b0 6
b0 7
b0 8
0:
b1100011 ;
0>
b0 ?
b0 B
b0 E
b0 J
b0 K
0N
bx Q
b0 S
b0 W
b0 X
b0 Y
b0 Z
b0 [
b1100011 \
b0 _
b0 `
b0 e
b0 f
b0 o
b0 p
b0 q
#20000
0!
0+
#30000
1!
1+
b10000 4
#31000
1"
1,
#40000
0!
0+
#50000
1!
1#
1+
1-
b100 5
b1 7
bx J
b10000 R
b1 S
bx W
#60000
0!
0+
#70000
1!
b100000000000000000000000000000000110000000000000000000000000000001000000000000000000000000000000001000000000000000000000000 $
1+
b100000000000000000000000000000000110000000000000000000000000000001000000000000000000000000000000001000000000000000000000000 /
b100000000000000000000000000000000110000000000000000000000000000001000000000000000000000000000000001000000000000000000000000 3
b100 5
b1 6
b10 7
b100000000000000000000000000000000110000000000000000000000000000001000000000000000000000000000000001000000000000000000000000 I
b100000000000000000000000000000000110000000000000000000000000000001000000000000000000000000000000001000000000000000000000000 O
b100000000000000000000000000000000110000000000000000000000000000001000000000000000000000000000000001000000000000000000000000 Q
b10000 R
b10 S
#80000
0!
0+
#90000
1!
1+
b100 5
b10 6
b11 7
b10000 R
b11 S
#100000
0!
0+
#110000
1!
1+
b100 5
b11 6
1L
b10000 R
b100 S
1U
#120000
0!
0+
#130000
1!
1+
b100 5
bx ;
b1 <
1=
bx K
0L
b10000 R
b101 S
0U
1V
bx X
bx [
bx \
1]
#140000
0!
0+
#150000
1!
1+
b100 5
b10 <
1>
b0xxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b110 S
b1 Y
bx [
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _
b1 `
b0 a
#160000
0!
0+
#170000
1!
1+
b100 5
b11 <
bx0000000000000000xxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b111 S
b10 Y
b1 Z
bx [
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _
b10 `
b0 a
#180000
0!
0+
#190000
1!
1+
b100 5
b100 <
bx00000000xxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b1000 S
b11 Y
b10 Z
bx [
bx00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _
b11 `
b0 a
#200000
0!
0+
#210000
1!
1+
b100 5
b101 <
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b1001 S
b100 Y
b11 Z
bx [
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _
b100 `
b0 a
#220000
0!
0+
#230000
1!
1+
b100 5
b110 <
bx0000000000000000xxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b1010 S
b101 Y
b100 Z
bx [
bx0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 _
b101 `
b0 a
#240000
0!
0+
#250000
1!
1+
b100 5
b111 <
bx0000000000000000xxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b1011 S
b110 Y
b101 Z
bx [
bx00000000000000000000000000000000000000000000000000000000000000000000000000000000 _
b110 `
b0 a
#260000
0!
0+
#270000
1!
1+
b100 5
b1000 <
bx00000000xxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b1100 S
b111 Y
b110 Z
bx [
bx000000000000000000000000000000000000000000000000000000000000000000000000 _
b111 `
b0 a
#280000
0!
0+
#290000
1!
1+
b100 5
b1001 <
bx0000000000000000000000000000000000000000000000000000000000000000 ?
b10000 R
b1101 S
b1000 Y
b111 Z
bx [
bx0000000000000000000000000000000000000000000000000000000000000000 _
b1000 `
b0 a
#300000
0!
0+
#310000
1!
1+
b100 5
b1010 <
bx00000000xxxxxxxx000000000000000000000000000000000000000000000000 ?
b10000 R
b1110 S
b1001 Y
b1000 Z
bx [
bx00000000000000000000000000000000000000000000000000000000 _
b1001 `
b0 a
#320000
0!
0+
#330000
1!
1+
b100 5
b1011 <
bx00000000xxxxxxxxxxxxxxxx0000000000000000000000000000000000000000 ?
b10000 R
b1111 S
b1010 Y
b1001 Z
bx [
bx000000000000000000000000000000000000000000000000 _
b1010 `
b0 a
#340000
0!
0+
#350000
1!
1+
b100 5
b1100 <
bx00000000xxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000 ?
b10000 R
b10000 S
b1011 Y
b1010 Z
bx [
bx0000000000000000000000000000000000000000 _
b1011 `
b0 a
#360000
0!
0+
#370000
1!
1+
b100 5
b1101 <
bx00000000000000000000000000000000 ?
b10000 R
b10001 S
b1100 Y
b1011 Z
bx [
bx00000000000000000000000000000000 _
b1100 `
b0 a
#380000
0!
0+
#390000
1!
1+
b100 5
b1110 <
bx000000000000000000000000 ?
b10000 R
b10010 S
b1101 Y
b1100 Z
bx [
bx000000000000000000000000 _
b1101 `
b0 a
#400000
0!
0+
#410000
1!
1+
b100 5
b100 7
b1111 <
bx0000000000000000 ?
b10000 R
b10011 S
b1110 Y
b1101 Z
bx [
bx0000000000000000 _
b1110 `
b0 a
#420000
0!
0+
#430000
1!
1+
b100 5
b100 6
b101 7
b10000 <
bx00000000 ?
b10000 R
b10100 S
b1111 Y
b1110 Z
bx [
bx00000000 _
b1111 `
b0 a
#440000
0!
0+
#450000
1!
1+
b100 5
b101 6
b110 7
b10001 <
0=
bx ?
b10000 R
b10101 S
0V
b0 Y
b1111 Z
bx [
0]
bx _
b0 `
b0 a
#460000
0!
0+
#470000
1!
1+
b100 5
b110 6
b111 7
b0 <
0>
1@
b10000 R
b10110 S
1^
#480000
0!
0+
#490000
1!
1+
b100 5
b111 6
b1100 7
0@
1C
b10000 R
b10111 S
0^
1b
#500000
0!
0+
#510000
1!
1+
b100 5
b1100 6
b1 7
bx B
0C
1G
b10000 R
b11000 S
0b
bx e
bx f
b100 g
b100 h
b1 k
1n
#520000
0!
0+
#530000
1!
1+
b1 1
b100 5
b1 6
b10 7
b1 8
bx E
0G
b100000000000000000000000000000000110000000000000000000000000000001000000000000000000000000000000001000000000000000000000000 Q
b10000 R
b11001 S
0n
b1 o
bx p
bx q
#540000
0!
0+
#550000
1!
1+
b100 5
b10 6
b11 7
1:
bx I
1N
bx Q
b10000 R
b11010 S
#560000
0!
0+
#570000
1!
1+
b100 5
b11 6
1L
b10000 R
b11011 S
1U
#580000
0!
0+
#590000
1!
1+
b100 5
b1 <
1=
0L
b10000 R
b11100 S
0U
1V
1]
#600000
0!
0+
#610000
1!
1+
b100 5
b10 <
1>
b10000 R
b11101 S
b1 Y
b0 Z
bx [
b1 `
b0 a
#620000
0!
0+
#630000
1!
1+
b100 5
b11 <
b10000 R
b11110 S
b10 Y
b1 Z
bx [
b10 `
b0 a
#640000
0!
0+
#650000
1!
1+
b100 5
b100 <
b10000 R
b11111 S
b11 Y
b10 Z
bx [
b11 `
b0 a
#660000
0!
0+
#670000
1!
1+
b100 5
b101 <
b10000 R
b100000 S
b100 Y
b11 Z
bx [
b100 `
b0 a
#680000
0!
0+
#690000
1!
1+
b100 5
b110 <
b10000 R
b100001 S
b101 Y
b100 Z
bx [
b101 `
b0 a
#700000
0!
0+
#710000
1!
1+
b100 5
b111 <
b10000 R
b100010 S
b110 Y
b101 Z
bx [
b110 `
b0 a
#720000
0!
0+
#730000
1!
1+
b100 5
b1000 <
b10000 R
b100011 S
b111 Y
b110 Z
bx [
b111 `
b0 a
#740000
0!
0+
#750000
1!
1+
b100 5
b1001 <
b10000 R
b100100 S
b1000 Y
b111 Z
bx [
b1000 `
b0 a
#760000
0!
0+
#770000
1!
1+
b100 5
b1010 <
b10000 R
b100101 S
b1001 Y
b1000 Z
bx [
b1001 `
b0 a
#780000
0!
0+
#790000
1!
1+
b100 5
b1011 <
b10000 R
b100110 S
b1010 Y
b1001 Z
bx [
b1010 `
b0 a
#800000
0!
0+
#810000
1!
1+
b100 5
b1100 <
b10000 R
b100111 S
b1011 Y
b1010 Z
bx [
b1011 `
b0 a
#820000
0!
0+
#830000
1!
1+
b100 5
b1101 <
b10000 R
b101000 S
b1100 Y
b1011 Z
bx [
b1100 `
b0 a
#840000
0!
0+
#850000
1!
1+
b100 5
b1110 <
b10000 R
b101001 S
b1101 Y
b1100 Z
bx [
b1101 `
b0 a
#860000
0!
0+
#870000
1!
1+
b100 5
b100 7
b1111 <
b10000 R
b101010 S
b1110 Y
b1101 Z
bx [
b1110 `
b0 a
#880000
0!
0+
#890000
1!
1+
b100 5
b100 6
b101 7
b10000 <
b10000 R
b101011 S
b1111 Y
b1110 Z
bx [
b1111 `
b0 a
#900000
0!
0+
#910000
1!
1+
b100 5
b101 6
b110 7
b10001 <
0=
b10000 R
b101100 S
0V
b0 Y
b1111 Z
bx [
0]
b0 `
b0 a
#920000
0!
0+
#930000
1!
1+
b100 5
b110 6
b111 7
b0 <
0>
1@
b10000 R
b101101 S
1^
#940000
0!
0+
#950000
1!
1+
b100 5
b111 6
b1100 7
0@
1C
b10000 R
b101110 S
0^
1b
#960000
0!
0+
#970000
1!
1+
b100 5
b1100 6
b1 7
0C
1G
b10000 R
b101111 S
0b
b100 g
b100 h
1n
#980000
0!
0+
#990000
1!
1+
b10 1
b100 5
b1 6
b10 7
b10 8
0G
b10000 R
b110000 S
0n
b10 o
#1000000
0!
0+
