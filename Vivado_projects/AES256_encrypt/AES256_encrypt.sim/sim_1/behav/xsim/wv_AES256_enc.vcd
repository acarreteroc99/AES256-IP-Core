$date
   Tue Sep 21 23:27:15 2021
$end
$version
  2020.2
$end
$timescale
  1ps
$end
$scope module tb_AES256_enc $end
$var reg 1 ! clk $end
$var reg 1 " resetn $end
$var reg 8 # flags [7:0] $end
$var reg 128 $ plaintext [15:0] $end
$var reg 1 % addr $end
$var wire 1 & done $end
$var wire 128 ' encData [15:0] $end
$var integer 32 ( index $end
$scope module DUT $end
$var integer 32 ) i $end
$var reg 4 * round [3:0] $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 8 - flags [7:0] $end
$var wire 128 . plaintext [15:0] $end
$var wire 1 / addr $end
$var reg 8 0 regCTRL [7:0] $end
$var reg 128 1 encryptedData [15:0] $end
$var reg 1 2 done $end
$var wire 128 ' encData [15:0] $end
$var wire 8 3 dataOut1_demux [7:0] $end
$var wire 128 4 dataOut2_demux [15:0] $end
$var wire 1 5 fifo_empty $end
$var wire 8 6 dataOut_fifo [7:0] $end
$var wire 8 7 dataOut_ROM [7:0] $end
$var wire 1 8 OK_ROM $end
$var wire 1 9 req_ROM $end
$var wire 32 : dataOut_reg4_1 [3:0] $end
$var wire 1 ; reg41_full $end
$var wire 32 < dataOut_shifter [3:0] $end
$var wire 2 = row [1:0] $end
$var wire 1 > OK_shifter $end
$var wire 128 ? dataOut_reg16_1 [15:0] $end
$var wire 1 @ reg161_full $end
$var wire 1 A OK_mC $end
$var wire 128 B dataOut_mixColumns [15:0] $end
$var wire 1 C req_mixColumns $end
$var wire 128 D dataOut_reg16_2 [15:0] $end
$var wire 1 E reg162_full $end
$var wire 1 F OK_addRK $end
$var wire 1 G OK_inKey $end
$var wire 128 H dataIn_addRK [15:0] $end
$var wire 128 I dataOut_addRK [15:0] $end
$var wire 8 J dataOut_reg163 [7:0] $end
$var wire 1 K reg163_empty $end
$var wire 128 L key [127:0] $end
$var wire 1 M OK_romKey $end
$scope module demux $end
$var wire 1 / addr $end
$var wire 128 . inp [127:0] $end
$var wire 8 3 outp0 [7:0] $end
$var wire 128 4 outp1 [15:0] $end
$var reg 128 N auxData [15:0] $end
$var reg 8 O auxFlags [7:0] $end
$var integer 32 P i $end
$upscope $end
$scope module fifo $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 8 rd_ROM $end
$var wire 1 K reg16_empty $end
$var wire 8 J inp [7:0] $end
$var reg 1 Q reg_rdROM $end
$var reg 1 R reg16_emptyReg $end
$var reg 8 S reg_inp [7:0] $end
$var reg 8 T outp [7:0] $end
$var reg 1 U empty $end
$upscope $end
$scope module rom_Sbox $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 ; reg_full $end
$var wire 1 5 fifo_empty $end
$var wire 8 6 addr [7:0] $end
$var reg 1 V reg_fifoEmpty $end
$var reg 1 W reg_regFull $end
$var reg 8 X auxAddr [7:0] $end
$var reg 8 Y data [7:0] $end
$var reg 1 Z done $end
$var reg 1 [ wr_req $end
$var integer 32 \ index $end
$upscope $end
$scope module reg4_1 $end
$var integer 32 ] index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 @ rd_en $end
$var wire 1 9 wr_en $end
$var wire 8 7 i [7:0] $end
$var reg 32 ^ aux [3:0] $end
$var reg 2 _ counter [1:0] $end
$var reg 1 ` reg_rdEn $end
$var reg 1 a reg_full $end
$var reg 32 b o [3:0] $end
$upscope $end
$scope module shifter $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 @ wr_en $end
$var wire 1 ; reg41_full $end
$var wire 32 : inp [3:0] $end
$var reg 1 c reg_wrEn $end
$var reg 1 d reg_reg41Full $end
$var reg 32 e aux [3:0] $end
$var reg 32 f outp [3:0] $end
$var reg 2 g row [1:0] $end
$var integer 32 h index $end
$upscope $end
$scope module reg16_1 $end
$var integer 32 i index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 A rd_en $end
$var wire 1 ; wr_en $end
$var wire 32 < i [3:0] $end
$var reg 128 j aux [15:0] $end
$var reg 2 k counter [1:0] $end
$var reg 1 l reg_rdEn $end
$var reg 1 m reg_wrEn $end
$var reg 1 n reg_full $end
$var reg 128 o o [15:0] $end
$upscope $end
$scope module mixColumns $end
$var wire 1 + clk $end
$var wire 1 E enable $end
$var wire 1 , reset $end
$var wire 1 @ reg161_status $end
$var wire 128 ? state [15:0] $end
$var reg 128 p stateAux [15:0] $end
$var reg 1 q reg161_full $end
$var reg 1 r reg162_full $end
$var reg 128 s state_out [15:0] $end
$var reg 1 t done $end
$var integer 32 u index $end
$var wire 128 v state_out_comb [15:0] $end
$var reg 128 w f_state_out [15:0] $end
$scope function MultiplyByTwo $end
$var reg 8 x MultiplyByTwo [7:0] $end
$var reg 8 y x [7:0] $end
$upscope $end
$scope function MultiplyByThree $end
$var reg 8 z MultiplyByThree [7:0] $end
$var reg 8 { x [7:0] $end
$upscope $end
$scope function finite_multiplication $end
$var reg 15 | finite_multiplication [14:0] $end
$var reg 8 } A [7:0] $end
$var reg 8 ~ B [7:0] $end
$var reg 15 !! AB [14:0] $end
$var integer 32 "! i $end
$upscope $end
$scope function Mod $end
$var reg 8 #! Mod [7:0] $end
$var reg 15 $! x [14:0] $end
$var reg 8 %! y [7:0] $end
$var reg 9 &! con [8:0] $end
$var reg 15 '! z [14:0] $end
$var integer 32 (! i $end
$upscope $end
$scope function mix_columns $end
$var reg 128 )! mix_columns [15:0] $end
$var reg 128 *! state [127:0] $end
$var integer 32 +! i $end
$var integer 32 ,! j $end
$var integer 32 -! ij $end
$var integer 32 .! k $end
$var reg 128 /! state_2d [15:0] $end
$var reg 128 0! mix_out_2d [15:0] $end
$var reg 15 1! tmp_mult [14:0] $end
$var reg 15 2! tmp_mod [14:0] $end
$var reg 128 3! state_out [15:0] $end
$upscope $end
$upscope $end
$scope module reg16_2 $end
$var integer 32 4! index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 A wr_en $end
$var wire 1 F rd_en $end
$var wire 128 B i [15:0] $end
$var reg 128 5! aux [15:0] $end
$var reg 1 6! OK_mC $end
$var reg 1 7! OK_addRK $end
$var reg 1 8! reg_full $end
$var reg 128 9! o [15:0] $end
$upscope $end
$scope module mux $end
$var wire 4 :! addr [3:0] $end
$var wire 128 4 inp0 [15:0] $end
$var wire 128 D inp1 [15:0] $end
$var reg 128 ;! aux [15:0] $end
$var reg 128 <! outp [15:0] $end
$upscope $end
$scope module addRK $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 K reg163_status $end
$var wire 1 E reg162_status $end
$var wire 1 M rd_comp $end
$var wire 1 =! startBit $end
$var wire 4 >! round [3:0] $end
$var wire 128 L k [127:0] $end
$var wire 128 H p [15:0] $end
$var reg 1 ?! reg163_empty $end
$var reg 1 @! reg162_full $end
$var reg 1 A! rd_romKey $end
$var reg 128 B! regKey [127:0] $end
$var reg 128 C! reg_p [15:0] $end
$var reg 4 D! reg_round [3:0] $end
$var reg 128 E! o [15:0] $end
$var reg 1 F! ok $end
$var reg 1 G! ok_inkey $end
$var integer 32 H! i $end
$upscope $end
$scope module rom_key $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 I! startBit $end
$var wire 1 G wr_en $end
$var wire 4 J! selectKey [3:0] $end
$var reg 1 K! reg_selectKey $end
$var reg 128 L! data [127:0] $end
$var reg 1 M! done $end
$var reg 1 N! reg_startBit $end
$upscope $end
$scope module reg16_3 $end
$var integer 32 O! index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 F wr_en $end
$var wire 1 5 req_fifo $end
$var wire 128 I i [15:0] $end
$var reg 128 P! aux [15:0] $end
$var reg 4 Q! n_read [3:0] $end
$var reg 1 R! wr_enReg $end
$var reg 1 S! req_fifoReg $end
$var reg 1 T! reg_empty $end
$var reg 8 U! o [7:0] $end
$upscope $end
$upscope $end
$scope task enableResetn $end
$upscope $end
$scope task test_AES_encryption $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
bx !!
x"
bx "!
bx #
b0 #!
bx $
bx $!
x%
bx %!
x&
bx &!
bx '
bx '!
bx (
bx (!
bx )
bx )!
bx *
bx *!
0+
bx +!
x,
bx ,!
bx -
bx -!
bx .
bx .!
x/
bx /!
bx 0
bx 0!
bx 1
bx 1!
x2
bx 2!
bx 3
bx 3!
bx 4
bx 4!
x5
bx 5!
bx 6
x6!
bx 7
x7!
x8
x8!
x9
bx 9!
bx :
bx :!
x;
bx ;!
bx <
bx <!
bz =
x=!
z>
bx >!
bx ?
x?!
x@
x@!
xA
xA!
bx B
bx B!
zC
bx C!
bx D
bx D!
xE
bx E!
xF
xF!
xG
xG!
bx H
bx H!
bx I
xI!
bx J
bx J!
xK
xK!
bx L
bx L!
xM
xM!
bx N
xN!
bx O
bx O!
bx P
bx P!
xQ
bx Q!
xR
xR!
bx S
xS!
bx T
xT!
xU
bx U!
xV
xW
bx X
bx Y
xZ
x[
bx \
bx ]
bx ^
b0 _
x`
xa
bx b
xc
xd
bx e
bx f
bx g
bx h
bx i
bx j
bx k
xl
xm
xn
bx o
bx p
xq
xr
bx s
xt
bx u
bx v
bx w
bx0 x
bx y
bx z
bx {
b0 |
bx }
bx ~
$end
#10000
1!
1+
x2
08
09
0Z
0[
#11000
0"
0,
0;
1?!
0@
b0 D!
0F
0F!
1G
1G!
1K
0K!
0M
0M!
b0 Q!
1T!
b100 ]
b0 ^
0`
0a
b0 k
0n
#20000
0!
0+
#30000
1!
0&
b0 '
b10000 )
b0 *
1+
b0 0
b0 1
02
15
08!
b0 :!
bx <!
0=!
b0 >!
1A
0E
0F!
1G!
0I!
b0 J!
0M!
0N!
1Q
1T!
1U
0W
b100 ]
0a
b11 g
1l
0n
1t
#31000
1"
b1 $
0%
1,
b1 .
0/
b1 3
b1 O
#40000
0!
0+
#50000
1!
b0 $
1%
1+
b0 .
1/
b1 0
02
b0 4
b10000 4!
06!
07!
18
18!
19
b0 <!
1=!
1@!
1A!
1E
0F!
0G
0G!
b0 H
1I!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 L
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 L!
1M
1M!
b0 N
1N!
b10000 P
0Q
1R
0R!
1S!
bx Y
1Z
1[
0c
0d
0r
#60000
0!
0+
#70000
1!
b1 *
1+
b1 0
02
16!
b1 :!
bx <!
b1 >!
0?!
0@!
0A!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 B!
b0 C!
b1 D!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 E!
1F
1F!
1G
1G!
bx H
b10000 H!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 I
b1 J!
1K!
0M
0M!
1Q
bx Y
1Z
1[
#80000
0!
0+
#90000
1!
1+
b1 0
02
b10000 4!
07!
08!
bx 9!
1A!
0E
0F
0F!
0G
0G!
0K
1M
1M!
b10000 O!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 P!
0R!
0T!
bx Y
1Z
1[
#100000
0!
0+
#110000
1!
1+
b1 0
02
b10000 4!
05
06!
18!
1@!
1E
b1111 J
0M
0M!
b1 Q!
0R
0S!
0U
b1111 U!
bx Y
1Z
1[
#120000
0!
0+
#130000
1!
1+
b1 0
02
15
16!
bx C!
0F!
0M!
bx T
1U
bx Y
1Z
1[
#140000
0!
0+
#150000
1!
1+
b1 0
02
05
0F!
b1110 J
0M!
b10 Q!
b1111 S
0S!
0U
b1110 U!
bx Y
1Z
1[
#160000
0!
0+
#170000
1!
1+
b1 0
02
15
b1111 6
0F!
0M!
b1111 T
1U
bx Y
1Z
1[
#180000
0!
0+
#190000
1!
1+
b1 0
02
05
b1110110 7
0F!
b1101 J
0M!
b11 Q!
b1110 S
0S!
0U
b1101 U!
b1110110 Y
1Z
1[
b1110110 ^
b1 _
#200000
0!
0+
#210000
1!
1+
b1 0
02
15
b1110 6
0F!
0M!
b1110 T
1U
b1110110 Y
1Z
1[
#220000
0!
0+
#230000
1!
1+
b1 0
02
05
b10101011 7
0F!
b1100 J
0M!
b100 Q!
b1101 S
0S!
0U
b1100 U!
b10101011 Y
1Z
1[
b1010101101110110 ^
b10 _
#240000
0!
0+
#250000
1!
1+
b1 0
02
15
b1101 6
0F!
0M!
b1101 T
1U
b10101011 Y
1Z
1[
#260000
0!
0+
#270000
1!
1+
b1 0
02
05
b11010111 7
0F!
b1011 J
0M!
b101 Q!
b1100 S
0S!
0U
b1011 U!
b11010111 Y
1Z
1[
b110101111010101101110110 ^
b11 _
#280000
0!
0+
#290000
1!
1+
b1 0
02
15
b1100 6
0F!
0M!
b1100 T
1U
b11010111 Y
1Z
1[
#300000
0!
0+
#310000
1!
1+
b1 0
02
05
b11111110 7
1;
0F!
b1010 J
0M!
b110 Q!
b1011 S
0S!
0U
b1010 U!
b11111110 Y
1Z
1[
b11111110110101111010101101110110 ^
b0 _
1a
#320000
0!
0+
#330000
1!
1+
b1 0
02
15
b1011 6
08
09
b11111110110101111010101101110110 :
0;
0F!
0M!
b1011 T
1U
0Z
0[
b100 ]
0a
b11111110110101111010101101110110 b
1d
bx f
b0 g
#340000
0!
0+
#350000
1!
1+
b1 0
02
05
b101011 7
18
19
0F!
b1001 J
0M!
0Q
b111 Q!
b1010 S
0S!
0U
b1001 U!
b101011 Y
1Z
1[
b11111110110101111010101100101011 ^
b1 _
0d
b11111110110101111010101101110110 e
#360000
0!
0+
#370000
1!
1+
b1 0
02
15
b1010 6
0F!
0M!
1Q
b1010 T
1U
b101011 Y
1Z
1[
#380000
0!
0+
#390000
1!
1+
b1 0
02
05
b1100111 7
0F!
b1000 J
0M!
b1000 Q!
b1001 S
0S!
0U
b1000 U!
b1100111 Y
1Z
1[
b11111110110101110110011100101011 ^
b10 _
#400000
0!
0+
#410000
1!
1+
b1 0
02
15
b1001 6
0F!
0M!
b1001 T
1U
b1100111 Y
1Z
1[
#420000
0!
0+
#430000
1!
1+
b1 0
02
05
b1 7
0F!
b111 J
0M!
b1001 Q!
b1000 S
0S!
0U
b111 U!
b1 Y
1Z
1[
b11111110000000010110011100101011 ^
b11 _
#440000
0!
0+
#450000
1!
1+
b1 0
02
15
b1000 6
0F!
0M!
b1000 T
1U
b1 Y
1Z
1[
#460000
0!
0+
#470000
1!
1+
b1 0
02
05
b110000 7
1;
0F!
b110 J
0M!
b1010 Q!
b111 S
0S!
0U
b110 U!
b110000 Y
1Z
1[
b110000000000010110011100101011 ^
b0 _
1a
#480000
0!
0+
#490000
1!
1+
b1 0
02
15
b111 6
08
09
b110000000000010110011100101011 :
0;
b11111110110101111010101101110110 <
0F!
0M!
b111 T
1U
0Z
0[
b100 ]
0a
b110000000000010110011100101011 b
1d
b11111110110101111010101101110110 f
b1 g
1m
#500000
0!
0+
#510000
1!
1+
b1 0
02
05
b11000101 7
18
19
0F!
b101 J
0M!
0Q
b1011 Q!
b110 S
0S!
0U
b101 U!
b11000101 Y
1Z
1[
b110000000000010110011111000101 ^
b1 _
0d
b110000000000010110011100101011 e
b100 i
bx11111110110101111010101101110110 j
b1 k
0m
#520000
0!
0+
#530000
1!
1+
b1 0
02
15
b110 6
0F!
0M!
1Q
b110 T
1U
b11000101 Y
1Z
1[
#540000
0!
0+
#550000
1!
1+
b1 0
02
05
b1101111 7
0F!
b100 J
0M!
b1100 Q!
b101 S
0S!
0U
b100 U!
b1101111 Y
1Z
1[
b110000000000010110111111000101 ^
b10 _
#560000
0!
0+
#570000
1!
1+
b1 0
02
15
b101 6
0F!
0M!
b101 T
1U
b1101111 Y
1Z
1[
#580000
0!
0+
#590000
1!
1+
b1 0
02
05
b1101011 7
0F!
b11 J
0M!
b1101 Q!
b100 S
0S!
0U
b11 U!
b1101011 Y
1Z
1[
b110000011010110110111111000101 ^
b11 _
#600000
0!
0+
#610000
1!
1+
b1 0
02
15
b100 6
0F!
0M!
b100 T
1U
b1101011 Y
1Z
1[
#620000
0!
0+
#630000
1!
1+
b1 0
02
05
b11110010 7
1;
0F!
b10 J
0M!
b1110 Q!
b11 S
0S!
0U
b10 U!
b11110010 Y
1Z
1[
b11110010011010110110111111000101 ^
b0 _
1a
#640000
0!
0+
#650000
1!
1+
b1 0
02
15
b11 6
08
09
b11110010011010110110111111000101 :
0;
b101011001100000000000101100111 <
0F!
0M!
b11 T
1U
0Z
0[
b100 ]
0a
b11110010011010110110111111000101 b
1d
b101011001100000000000101100111 f
b10 g
1m
#660000
0!
0+
#670000
1!
1+
b1 0
02
05
b1111011 7
18
19
0F!
b1 J
0M!
0Q
b1111 Q!
b10 S
0S!
0U
b1 U!
b1111011 Y
1Z
1[
b11110010011010110110111101111011 ^
b1 _
0d
b11110010011010110110111111000101 e
b100 i
bx0010101100110000000000010110011111111110110101111010101101110110 j
b10 k
0m
#680000
0!
0+
#690000
1!
1+
b1 0
02
15
b10 6
0F!
0M!
1Q
b10 T
1U
b1111011 Y
1Z
1[
#700000
0!
0+
#710000
1!
1+
b1 0
02
05
b1110111 7
1?!
0F!
b0 J
1K
0M!
b0 Q!
b1 S
0S!
1T!
0U
b0 U!
b1110111 Y
1Z
1[
b11110010011010110111011101111011 ^
b10 _
#720000
0!
0+
#730000
1!
b10 *
1+
b1 0
02
15
b1 6
b10 :!
bx <!
b10 >!
0?!
0@!
0A!
b10 D!
bx E!
1F
1F!
1G
1G!
b10000 H!
bx I
b10 J!
0K!
0M!
1R
b1 T
1U
b1110111 Y
1Z
1[
#740000
0!
0+
#750000
1!
1+
b1 0
02
b10000 4!
b1111100 7
07!
08!
bx 9!
1A!
0E
0F
0F!
0G
0G!
0K
1M
1M!
b10000 O!
bx P!
0R!
1S!
0T!
b1111100 Y
1Z
1[
b11110010011111000111011101111011 ^
b11 _
#760000
0!
0+
#770000
1!
1+
b1 0
02
b10000 4!
05
06!
18!
1@!
1E
bx J
0M
0M!
b1 Q!
0R
b0 S
0S!
0U
bx U!
b1111100 Y
1Z
1[
#780000
0!
0+
#790000
1!
1+
b1 0
02
15
b0 6
16!
0F!
0M!
b0 T
1U
b1111100 Y
1Z
1[
#800000
0!
0+
#810000
1!
1+
b1 0
02
05
b1100011 7
1;
0F!
0M!
b10 Q!
bx S
0S!
0U
bx U!
b1100011 Y
1Z
1[
b1100011011111000111011101111011 ^
b0 _
1a
#820000
0!
0+
#830000
1!
1+
b1 0
02
15
bx 6
08
09
b1100011011111000111011101111011 :
0;
b1101111110001011111001001101011 <
0F!
0M!
bx T
1U
0Z
0[
b100 ]
0a
b1100011011111000111011101111011 b
1d
b1101111110001011111001001101011 f
b11 g
1m
#840000
0!
0+
#850000
1!
1+
b1 0
02
05
bx 7
18
19
0F!
0M!
0Q
b11 Q!
0S!
0U
bx U!
bx Y
1Z
1[
b11000110111110001110111xxxxxxxx ^
b1 _
0d
b1100011011111000111011101111011 e
b100 i
bx011011111100010111110010011010110010101100110000000000010110011111111110110101111010101101110110 j
b11 k
0m
#860000
0!
0+
#870000
1!
1+
b1 0
02
15
0F!
0M!
1Q
bx T
1U
bx Y
1Z
1[
#880000
0!
0+
#890000
1!
1+
b1 0
02
05
0F!
0M!
b100 Q!
0S!
0U
bx U!
bx Y
1Z
1[
#900000
0!
0+
#910000
1!
1+
b1 0
02
15
0F!
0M!
bx T
1U
bx Y
1Z
1[
#920000
0!
0+
#930000
1!
1+
b1 0
02
05
0F!
0M!
b101 Q!
0S!
0U
bx U!
bx Y
1Z
1[
#940000
0!
0+
#950000
1!
1+
b1 0
02
15
0F!
0M!
bx T
1U
bx Y
1Z
1[
#960000
0!
0+
#970000
1!
1+
b1 0
02
05
0F!
0M!
b110 Q!
0S!
0U
bx U!
bx Y
1Z
1[
#980000
0!
0+
#990000
1!
1+
b1 0
02
15
0F!
0M!
bx T
1U
bx Y
1Z
1[
