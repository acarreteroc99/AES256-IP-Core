$date
   Sun Sep 19 22:26:13 2021
$end
$version
  2020.2
$end
$timescale
  1ps
$end
$scope module tb_AES256_enc $end
$var reg 1 ! clk $end
$var reg 1 " resetn $end
$var reg 8 # flags [7:0] $end
$var reg 128 $ plaintext [15:0] $end
$var reg 1 % addr $end
$var wire 1 & done $end
$var wire 128 ' encData [15:0] $end
$var integer 32 ( index $end
$scope module DUT $end
$var integer 32 ) i $end
$var reg 4 * round [3:0] $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 8 - flags [7:0] $end
$var wire 128 . plaintext [15:0] $end
$var wire 1 / addr $end
$var reg 8 0 regCTRL [7:0] $end
$var reg 128 1 encryptedData [15:0] $end
$var reg 1 2 done $end
$var wire 128 ' encData [15:0] $end
$var wire 8 3 dataOut1_demux [7:0] $end
$var wire 128 4 dataOut2_demux [15:0] $end
$var wire 1 5 fifo_empty $end
$var wire 8 6 dataOut_fifo [7:0] $end
$var wire 8 7 dataOut_ROM [7:0] $end
$var wire 1 8 OK_ROM $end
$var wire 1 9 req_ROM $end
$var wire 32 : dataOut_reg4_1 [3:0] $end
$var wire 1 ; reg41_full $end
$var wire 32 < dataOut_shifter [3:0] $end
$var wire 2 = row [1:0] $end
$var wire 1 > OK_shifter $end
$var wire 128 ? dataOut_reg16_1 [15:0] $end
$var wire 1 @ reg161_full $end
$var wire 1 A OK_mC $end
$var wire 128 B dataOut_mixColumns [15:0] $end
$var wire 1 C req_mixColumns $end
$var wire 128 D dataOut_reg16_2 [15:0] $end
$var wire 1 E reg162_full $end
$var wire 1 F OK_addRK $end
$var wire 1 G OK_inKey $end
$var wire 128 H dataIn_addRK [15:0] $end
$var wire 128 I dataOut_addRK [15:0] $end
$var wire 8 J dataOut_reg163 [7:0] $end
$var wire 1 K reg163_empty $end
$var wire 128 L key [127:0] $end
$var wire 1 M OK_romKey $end
$scope module demux $end
$var wire 1 / addr $end
$var wire 128 . inp [127:0] $end
$var wire 8 3 outp0 [7:0] $end
$var wire 128 4 outp1 [15:0] $end
$var reg 128 N auxData [15:0] $end
$var reg 8 O auxFlags [7:0] $end
$var integer 32 P i $end
$upscope $end
$scope module fifo $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 8 rd_ROM $end
$var wire 1 K reg16_empty $end
$var wire 8 J inp [7:0] $end
$var reg 1 Q reg_rdROM $end
$var reg 1 R reg16_emptyReg $end
$var reg 8 S reg_inp [7:0] $end
$var reg 8 T outp [7:0] $end
$var reg 1 U empty $end
$upscope $end
$scope module rom_Sbox $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 ; reg_full $end
$var wire 1 5 fifo_empty $end
$var wire 8 6 addr [7:0] $end
$var reg 1 V reg_fifoEmpty $end
$var reg 1 W reg_regFull $end
$var reg 8 X auxAddr [7:0] $end
$var reg 8 Y data [7:0] $end
$var reg 1 Z done $end
$var reg 1 [ wr_req $end
$var integer 32 \ index $end
$upscope $end
$scope module reg4_1 $end
$var integer 32 ] index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 ^ rd_en $end
$var wire 1 9 wr_en $end
$var wire 8 7 i [7:0] $end
$var reg 32 _ aux [3:0] $end
$var reg 2 ` counter [1:0] $end
$var reg 1 a reg_rdEn $end
$var reg 1 b reg_full $end
$var reg 32 c o [3:0] $end
$upscope $end
$scope module shifter $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 @ wr_en $end
$var wire 1 ; reg41_full $end
$var wire 32 : inp [3:0] $end
$var reg 1 d reg_wrEn $end
$var reg 1 e reg_reg41Full $end
$var reg 32 f aux [3:0] $end
$var reg 32 g outp [3:0] $end
$var reg 2 h row [1:0] $end
$var integer 32 i index $end
$upscope $end
$scope module reg16_1 $end
$var integer 32 j index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 A rd_en $end
$var wire 1 k wr_en $end
$var wire 32 < i [3:0] $end
$var reg 128 l aux [15:0] $end
$var reg 2 m counter [1:0] $end
$var reg 1 n reg_rdEn $end
$var reg 1 o reg_full $end
$var reg 128 p o [15:0] $end
$upscope $end
$scope module mixColumns $end
$var wire 1 + clk $end
$var wire 1 E enable $end
$var wire 1 , reset $end
$var wire 1 @ reg161_status $end
$var wire 128 ? state [15:0] $end
$var reg 128 q stateAux [15:0] $end
$var reg 1 r reg161_full $end
$var reg 1 s reg162_full $end
$var reg 128 t state_out [15:0] $end
$var reg 1 u done $end
$var integer 32 v index $end
$var wire 128 w state_out_comb [15:0] $end
$var reg 128 x f_state_out [15:0] $end
$scope function MultiplyByTwo $end
$var reg 8 y MultiplyByTwo [7:0] $end
$var reg 8 z x [7:0] $end
$upscope $end
$scope function MultiplyByThree $end
$var reg 8 { MultiplyByThree [7:0] $end
$var reg 8 | x [7:0] $end
$upscope $end
$scope function finite_multiplication $end
$var reg 15 } finite_multiplication [14:0] $end
$var reg 8 ~ A [7:0] $end
$var reg 8 !! B [7:0] $end
$var reg 15 "! AB [14:0] $end
$var integer 32 #! i $end
$upscope $end
$scope function Mod $end
$var reg 8 $! Mod [7:0] $end
$var reg 15 %! x [14:0] $end
$var reg 8 &! y [7:0] $end
$var reg 9 '! con [8:0] $end
$var reg 15 (! z [14:0] $end
$var integer 32 )! i $end
$upscope $end
$scope function mix_columns $end
$var reg 128 *! mix_columns [15:0] $end
$var reg 128 +! state [127:0] $end
$var integer 32 ,! i $end
$var integer 32 -! j $end
$var integer 32 .! ij $end
$var integer 32 /! k $end
$var reg 128 0! state_2d [15:0] $end
$var reg 128 1! mix_out_2d [15:0] $end
$var reg 15 2! tmp_mult [14:0] $end
$var reg 15 3! tmp_mod [14:0] $end
$var reg 128 4! state_out [15:0] $end
$upscope $end
$upscope $end
$scope module reg16_2 $end
$var integer 32 5! index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 A wr_en $end
$var wire 1 F rd_en $end
$var wire 128 B i [15:0] $end
$var reg 128 6! aux [15:0] $end
$var reg 1 7! OK_mC $end
$var reg 1 8! OK_addRK $end
$var reg 1 9! reg_full $end
$var reg 128 :! o [15:0] $end
$upscope $end
$scope module mux $end
$var wire 1 ;! addr $end
$var wire 128 4 inp0 [15:0] $end
$var wire 128 D inp1 [15:0] $end
$var wire 128 H outp [15:0] $end
$upscope $end
$scope module addRK $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 K reg163_status $end
$var wire 1 E reg162_status $end
$var wire 1 M rd_comp $end
$var wire 1 <! startBit $end
$var wire 4 =! round [3:0] $end
$var wire 128 L k [127:0] $end
$var wire 128 H p [15:0] $end
$var reg 1 >! reg163_empty $end
$var reg 1 ?! reg162_full $end
$var reg 1 @! rd_romKey $end
$var reg 128 A! regKey [127:0] $end
$var reg 128 B! reg_p [15:0] $end
$var reg 4 C! reg_round [3:0] $end
$var reg 128 D! o [15:0] $end
$var reg 1 E! ok $end
$var reg 1 F! ok_inkey $end
$var integer 32 G! i $end
$upscope $end
$scope module rom_key $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 H! startBit $end
$var wire 1 G wr_en $end
$var wire 4 I! selectKey [3:0] $end
$var reg 1 J! reg_selectKey $end
$var reg 128 K! data [127:0] $end
$var reg 1 L! done $end
$var reg 1 M! reg_startBit $end
$upscope $end
$scope module reg16_3 $end
$var integer 32 N! index $end
$var wire 1 + clk $end
$var wire 1 , resetn $end
$var wire 1 F wr_en $end
$var wire 1 5 req_fifo $end
$var wire 128 I i [15:0] $end
$var reg 128 O! aux [15:0] $end
$var reg 4 P! n_read [3:0] $end
$var reg 1 Q! wr_enReg $end
$var reg 1 R! req_fifoReg $end
$var reg 1 S! reg_empty $end
$var reg 8 T! o [7:0] $end
$upscope $end
$upscope $end
$scope task enableResetn $end
$upscope $end
$scope task test_AES_encryption $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
bx !!
x"
bx "!
bx #
bx #!
bx $
b0 $!
x%
bx %!
x&
bx &!
bx '
bx '!
bx (
bx (!
bx )
bx )!
bx *
bx *!
0+
bx +!
x,
bx ,!
bx -
bx -!
bx .
bx .!
x/
bx /!
bx 0
bx 0!
bx 1
bx 1!
x2
bx 2!
bx 3
bx 3!
bx 4
bx 4!
x5
bx 5!
bx 6
bx 6!
bx 7
x7!
x8
x8!
x9
x9!
bx :
bx :!
x;
x;!
bx <
x<!
bz =
bx =!
z>
x>!
bx ?
x?!
x@
x@!
xA
bx A!
bx B
bx B!
zC
bx C!
bx D
bx D!
xE
xE!
xF
xF!
xG
bx G!
bx H
xH!
bx I
bx I!
bx J
xJ!
xK
bx K!
bx L
xL!
xM
xM!
bx N
bx N!
bx O
bx O!
bx P
bx P!
xQ
xQ!
xR
xR!
bx S
xS!
bx T
bx T!
xU
xV
xW
bx X
bx Y
xZ
x[
bx \
bx ]
1^
bx _
b0 `
xa
xb
bx c
xd
xe
bx f
bx g
bx h
bx i
bx j
1k
bx l
bx m
xn
xo
bx p
bx q
xr
xs
bx t
xu
bx v
bx w
bx x
bx0 y
bx z
bx {
bx |
b0 }
bx ~
$end
#10000
1!
1+
x2
08
09
0Z
0[
1a
#11000
0"
0,
0;
1>!
0@
b0 C!
0E!
0F
1F!
1G
0J!
1K
0L!
0M
b0 P!
1S!
b100 ]
b0 _
0b
b11 m
0o
#20000
0!
0+
#30000
1!
0&
b0 '
b10000 )
b0 *
1+
b0 0
b0 1
02
15
18
09!
0;!
0<!
b0 =!
1A
0E
0E!
1F!
0H!
b0 I!
0L!
0M!
1S!
1U
0W
1Z
b100 ]
0b
b11 h
1n
0o
1u
#31000
1"
b1 $
0%
1,
b1 .
0/
b1 3
b1 O
#40000
0!
0+
#50000
1!
b0 $
1%
1+
b0 .
1/
b1 0
02
b0 4
b10000 5!
07!
08!
19
19!
1<!
1?!
1@!
b1 C!
1E
0E!
0F!
0G
b0 H
1H!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 K!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 L
1L!
1M
1M!
b0 N
b10000 P
1Q
0Q!
1R
1R!
bx Y
1Z
1[
0d
0e
0s
#60000
0!
0+
#70000
1!
1+
b1 0
02
17!
0?!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 A!
b0 B!
0E!
0L!
0M
bx Y
1Z
1[
#80000
0!
0+
#90000
1!
b1 *
1+
b1 0
02
1;!
b1 =!
0>!
0@!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 D!
1E!
1F
1F!
1G
b10000 G!
bx H
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 I
b1 I!
1J!
0L!
bx Y
1Z
1[
#100000
0!
0+
#110000
1!
1+
b1 0
02
b10000 5!
08!
09!
bx :!
1@!
0E
0E!
0F
0F!
0G
0K
1L!
1M
b10000 N!
b10000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111 O!
0Q!
0S!
bx Y
1Z
1[
#120000
0!
0+
#130000
1!
1+
b1 0
02
05
b10000 5!
07!
19!
1?!
1E
b1111 J
0L!
0M
b1 P!
0R
0R!
b1111 T!
0U
bx Y
1Z
1[
#140000
0!
0+
#150000
1!
1+
b1 0
02
15
17!
0?!
bx B!
0E!
0L!
bx T
1U
bx Y
1Z
1[
#160000
0!
0+
#170000
1!
1+
b1 0
02
05
b1110 J
0L!
b10 P!
0R!
b1111 S
b1110 T!
0U
bx Y
1Z
1[
#180000
0!
0+
#190000
1!
1+
b1 0
02
15
b1111 6
0L!
b1111 T
1U
bx Y
1Z
1[
#200000
0!
0+
#210000
1!
1+
b1 0
02
05
b1110110 7
b1101 J
0L!
b11 P!
0R!
b1110 S
b1101 T!
0U
b1110110 Y
1Z
1[
b1110110 _
b1 `
#220000
0!
0+
#230000
1!
1+
b1 0
02
15
b1110 6
0L!
b1110 T
1U
b1110110 Y
1Z
1[
#240000
0!
0+
#250000
1!
1+
b1 0
02
05
b10101011 7
b1100 J
0L!
b100 P!
0R!
b1101 S
b1100 T!
0U
b10101011 Y
1Z
1[
b1010101101110110 _
b10 `
#260000
0!
0+
#270000
1!
1+
b1 0
02
15
b1101 6
0L!
b1101 T
1U
b10101011 Y
1Z
1[
#280000
0!
0+
#290000
1!
1+
b1 0
02
05
b11010111 7
b1011 J
0L!
b101 P!
0R!
b1100 S
b1011 T!
0U
b11010111 Y
1Z
1[
b110101111010101101110110 _
b11 `
#300000
0!
0+
#310000
1!
1+
b1 0
02
15
b1100 6
0L!
b1100 T
1U
b11010111 Y
1Z
1[
#320000
0!
0+
#330000
1!
1+
b1 0
02
05
b11111110 7
1;
b1010 J
0L!
b110 P!
0R!
b1011 S
b1010 T!
0U
b11111110 Y
1Z
1[
b11111110110101111010101101110110 _
b0 `
1b
#340000
0!
0+
#350000
1!
1+
b1 0
02
15
b1011 6
08
09
b11111110110101111010101101110110 :
0;
0L!
b1011 T
1U
0Z
0[
b100 ]
0b
b11111110110101111010101101110110 c
1e
bx g
b0 h
#360000
0!
0+
#370000
1!
1+
b1 0
02
05
b101011 7
18
19
b1001 J
0L!
b111 P!
0Q
0R!
b1010 S
b1001 T!
0U
b101011 Y
1Z
1[
b11111110110101111010101100101011 _
b1 `
0e
b11111110110101111010101101110110 f
#380000
0!
0+
#390000
1!
1+
b1 0
02
15
b1010 6
0L!
1Q
b1010 T
1U
b101011 Y
1Z
1[
#400000
0!
0+
#410000
1!
1+
b1 0
02
05
b1100111 7
b1000 J
0L!
b1000 P!
0R!
b1001 S
b1000 T!
0U
b1100111 Y
1Z
1[
b11111110110101110110011100101011 _
b10 `
#420000
0!
0+
#430000
1!
1+
b1 0
02
15
b1001 6
0L!
b1001 T
1U
b1100111 Y
1Z
1[
#440000
0!
0+
#450000
1!
1+
b1 0
02
05
b1 7
b111 J
0L!
b1001 P!
0R!
b1000 S
b111 T!
0U
b1 Y
1Z
1[
b11111110000000010110011100101011 _
b11 `
#460000
0!
0+
#470000
1!
1+
b1 0
02
15
b1000 6
0L!
b1000 T
1U
b1 Y
1Z
1[
#480000
0!
0+
#490000
1!
1+
b1 0
02
05
b110000 7
1;
b110 J
0L!
b1010 P!
0R!
b111 S
b110 T!
0U
b110000 Y
1Z
1[
b110000000000010110011100101011 _
b0 `
1b
#500000
0!
0+
#510000
1!
1+
b1 0
02
15
b111 6
08
09
b110000000000010110011100101011 :
0;
b11111110110101111010101101110110 <
0L!
b111 T
1U
0Z
0[
b100 ]
0b
b110000000000010110011100101011 c
1e
b11111110110101111010101101110110 g
b1 h
#520000
0!
0+
#530000
1!
1+
b1 0
02
05
b11000101 7
18
19
b101 J
0L!
b1011 P!
0Q
0R!
b110 S
b101 T!
0U
b11000101 Y
1Z
1[
b110000000000010110011111000101 _
b1 `
0e
b110000000000010110011100101011 f
#540000
0!
0+
#550000
1!
1+
b1 0
02
15
b110 6
0L!
1Q
b110 T
1U
b11000101 Y
1Z
1[
#560000
0!
0+
#570000
1!
1+
b1 0
02
05
b1101111 7
b100 J
0L!
b1100 P!
0R!
b101 S
b100 T!
0U
b1101111 Y
1Z
1[
b110000000000010110111111000101 _
b10 `
#580000
0!
0+
#590000
1!
1+
b1 0
02
15
b101 6
0L!
b101 T
1U
b1101111 Y
1Z
1[
#600000
0!
0+
#610000
1!
1+
b1 0
02
05
b1101011 7
b11 J
0L!
b1101 P!
0R!
b100 S
b11 T!
0U
b1101011 Y
1Z
1[
b110000011010110110111111000101 _
b11 `
#620000
0!
0+
#630000
1!
1+
b1 0
02
15
b100 6
0L!
b100 T
1U
b1101011 Y
1Z
1[
#640000
0!
0+
#650000
1!
1+
b1 0
02
05
b11110010 7
1;
b10 J
0L!
b1110 P!
0R!
b11 S
b10 T!
0U
b11110010 Y
1Z
1[
b11110010011010110110111111000101 _
b0 `
1b
#660000
0!
0+
#670000
1!
1+
b1 0
02
15
b11 6
08
09
b11110010011010110110111111000101 :
0;
b101011001100000000000101100111 <
0L!
b11 T
1U
0Z
0[
b100 ]
0b
b11110010011010110110111111000101 c
1e
b101011001100000000000101100111 g
b10 h
#680000
0!
0+
#690000
1!
1+
b1 0
02
05
b1111011 7
18
19
b1 J
0L!
b1111 P!
0Q
0R!
b10 S
b1 T!
0U
b1111011 Y
1Z
1[
b11110010011010110110111101111011 _
b1 `
0e
b11110010011010110110111111000101 f
#700000
0!
0+
#710000
1!
1+
b1 0
02
15
b10 6
0L!
1Q
b10 T
1U
b1111011 Y
1Z
1[
#720000
0!
0+
#730000
1!
1+
b1 0
02
05
b1110111 7
1>!
b0 J
1K
0L!
b0 P!
0R!
b1 S
1S!
b0 T!
0U
b1110111 Y
1Z
1[
b11110010011010110111011101111011 _
b10 `
#740000
0!
0+
#750000
1!
b10 *
1+
b1 0
02
15
b1 6
0;!
b10 =!
0>!
0@!
bx D!
1E!
1F
1F!
1G
b10000 G!
b0 H
bx I
b10 I!
0J!
0L!
1R
b1 T
1U
b1110111 Y
1Z
1[
#760000
0!
0+
#770000
1!
1+
b1 0
02
b10000 5!
b1111100 7
08!
09!
bx :!
1@!
0E
0E!
0F
0F!
0G
0K
1L!
1M
b10000 N!
bx O!
0Q!
1R!
0S!
b1111100 Y
1Z
1[
b11110010011111000111011101111011 _
b11 `
#780000
0!
0+
#790000
1!
1+
b1 0
02
05
b10000 5!
07!
19!
1?!
1E
bx J
0L!
0M
b1 P!
0R
0R!
b0 S
bx T!
0U
b1111100 Y
1Z
1[
#800000
0!
0+
#810000
1!
1+
b1 0
02
15
b0 6
17!
0?!
b0 B!
0E!
0L!
b0 T
1U
b1111100 Y
1Z
1[
#820000
0!
0+
#830000
1!
1+
b1 0
02
05
b1100011 7
1;
0L!
b10 P!
0R!
bx S
bx T!
0U
b1100011 Y
1Z
1[
b1100011011111000111011101111011 _
b0 `
1b
#840000
0!
0+
#850000
1!
1+
b1 0
02
15
bx 6
08
09
b1100011011111000111011101111011 :
0;
b1101111110001011111001001101011 <
0L!
bx T
1U
0Z
0[
b100 ]
0b
b1100011011111000111011101111011 c
1e
b1101111110001011111001001101011 g
b11 h
#860000
0!
0+
#870000
1!
1+
b1 0
02
05
bx 7
18
19
0L!
b11 P!
0Q
0R!
bx T!
0U
bx Y
1Z
1[
b11000110111110001110111xxxxxxxx _
b1 `
0e
b1100011011111000111011101111011 f
#880000
0!
0+
#890000
1!
1+
b1 0
02
15
0L!
1Q
bx T
1U
bx Y
1Z
1[
#900000
0!
0+
#910000
1!
1+
b1 0
02
05
0L!
b100 P!
0R!
bx T!
0U
bx Y
1Z
1[
#920000
0!
0+
#930000
1!
1+
b1 0
02
15
0L!
bx T
1U
bx Y
1Z
1[
#940000
0!
0+
#950000
1!
1+
b1 0
02
05
0L!
b101 P!
0R!
bx T!
0U
bx Y
1Z
1[
#960000
0!
0+
#970000
1!
1+
b1 0
02
15
0L!
bx T
1U
bx Y
1Z
1[
#980000
0!
0+
#990000
1!
1+
b1 0
02
05
0L!
b110 P!
0R!
bx T!
0U
bx Y
1Z
1[
#1000000
0!
0+
